import { useEffect, useState, useRef } from 'react';
import instances from '../../../../../../../utils/plugin/axios';
import Image from '../../../../../../../share/components/Image';
import YouTube from 'react-youtube';

// ** Redux
import { getCurrentContent } from '../../../../../../../redux/actionSlice/managementSlice';
import { useSelector } from 'react-redux';

import { useParams } from 'react-router-dom';

const BlogDetail = () => {
  // ** const
  const [previewData, setPreviewData] = useState({
    title: 'C√°ch l√†m m√¨ √Ω s·ªët b√≤ b·∫±m ngon t·∫°i nh√† ü•òü•ò',
    processingHTML:
      '<p><img src="https://firebasestorage.googleapis.com/v0/b/homnayangi-files.appspot.com/o/blogs%2Fdc7234fa-21fd-45bc-9612-f4fb5e2f4f8b%2Fimage_2023-02-27_173941756.pngc656a399-f18e-49ae-ac89-a8500d305323?alt=media&amp;token=e0f9c3bb-d87e-4199-8cc5-00a53f80d6ad" alt="image_2023-02-27_173941756.png"></p>' +
      '<p>Rau mu·ªëng nh·∫∑t b·ªè ph·∫ßn g·ªëc gi√†, l√° v√†ng, nh·∫∑t l·∫•y ph·∫ßn ng·ªçn non. ƒê·ªÉ x√†o rau mu·ªëng gi√≤n th√¨ n√™n l·∫•y ph·∫ßn cu·ªëng nhi·ªÅu h∆°n ph·∫ßn l√°.</p>' +
      '<p>Rau mu·ªëng sau khi nh·∫∑t s·∫°ch th√¨ r·ª≠a qua sau ƒë√≥ ng√¢m n∆∞·ªõc mu·ªëi lo√£ng kho·∫£ng 5-10 ph√∫t r·ªìi v·ªõt ra r·ª≠a l·∫°i, ƒë·ªÉ ·ªü r·ªï/r√° cho r√°o n∆∞·ªõc.</p>' +
      '<p><strong>M·∫πo:</strong>' +
      '·ªû b∆∞·ªõc n√†y, c√≥ 1 b√≠ quy·∫øt r·∫•t hay m√† b·∫°n c√≥ th·ªÉ √°p d·ª•ng, ƒë√≥ l√† sau khi r·ª≠a s·∫°ch, b·∫°n c√≥ th·ªÉ ng√¢m rau mu·ªëng trong thau n∆∞·ªõc ƒë√° l·∫°nh, v·ª´a gi√∫p rau gi√≤n l·∫°i xanh. Ng√¢m kho·∫£ng 3 ph√∫t th√¨ v·ªõt rau ra, ƒë·ªÉ r√°o.</p>',
    preparationHTML:
      '<p><img src="https://firebasestorage.googleapis.com/v0/b/homnayangi-files.appspot.com/o/blogs%2Fdc7234fa-21fd-45bc-9612-f4fb5e2f4f8b%2Fimage_2023-02-27_173941756.pngc656a399-f18e-49ae-ac89-a8500d305323?alt=media&amp;token=e0f9c3bb-d87e-4199-8cc5-00a53f80d6ad" alt="image_2023-02-27_173941756.png"></p>' +
      '<p>Rau mu·ªëng nh·∫∑t b·ªè ph·∫ßn g·ªëc gi√†, l√° v√†ng, nh·∫∑t l·∫•y ph·∫ßn ng·ªçn non. ƒê·ªÉ x√†o rau mu·ªëng gi√≤n th√¨ n√™n l·∫•y ph·∫ßn cu·ªëng nhi·ªÅu h∆°n ph·∫ßn l√°.</p>' +
      '<p>Rau mu·ªëng sau khi nh·∫∑t s·∫°ch th√¨ r·ª≠a qua sau ƒë√≥ ng√¢m n∆∞·ªõc mu·ªëi lo√£ng kho·∫£ng 5-10 ph√∫t r·ªìi v·ªõt ra r·ª≠a l·∫°i, ƒë·ªÉ ·ªü r·ªï/r√° cho r√°o n∆∞·ªõc.</p>' +
      '<p><strong>M·∫πo:</strong>' +
      '·ªû b∆∞·ªõc n√†y, c√≥ 1 b√≠ quy·∫øt r·∫•t hay m√† b·∫°n c√≥ th·ªÉ √°p d·ª•ng, ƒë√≥ l√† sau khi r·ª≠a s·∫°ch, b·∫°n c√≥ th·ªÉ ng√¢m rau mu·ªëng trong thau n∆∞·ªõc ƒë√° l·∫°nh, v·ª´a gi√∫p rau gi√≤n l·∫°i xanh. Ng√¢m kho·∫£ng 3 ph√∫t th√¨ v·ªõt rau ra, ƒë·ªÉ r√°o.</p>',
  });
  const params = useParams();
  const opts = {
    height: '420',
    width: '100%',
    playerVars: {
      // https://developers.google.com/youtube/player_parameters
      // autoplay: 1,
      // controls: 0,
      // mute: bannerMId.bannerVolumeClicked ? 1 : 0,
      modestbranding: 1,
    },
  };

  // ** get url id from URL
  const getVideoIdFromUrl = (url) => {
    const urlParams = new URLSearchParams(new URL(url).search);
    return urlParams.get('v');
  };

  // ** get data preview
  // useEffect(() => {
  //   if (params.blogId) {
  //     const fetch = async () => {
  //       const res = await instances.get(`/blogs/staff-preview/${params.blogId}`);
  //       // console.log(res.data);
  //       setPreviewData(res.data);
  //     };

  //     fetch();
  //   }
  // }, []);

  return (
    <div className="flex gap-3">
      <div className="bg-white xxlg:w-[70%] w-full font-inter rounded-[5px] shadow-md">
        {/* ================================= ·∫¢NH B√åA ================================= */}
        {previewData ? (
          <>
            {previewData?.imageUrl && (
              <Image
                alt="coverImage"
                className="object-cover w-full h-[384px] rounded-tl-[5px] rounded-tr-[5px]"
                src={previewData?.imageUrl}
              />
            )}
            <div className="py-5 px-5">
              <p className="text-[30px] text-black font-semibold">{previewData?.title}</p>
              <p className="mt-[12px] text-[14px] text-[#8f8f8f]">
                <span className="font-medium">Kh·∫©u ph·∫ßn:</span> t·ª´ {previewData?.minSize} ƒë·∫øn {previewData?.maxSize}{' '}
                ng∆∞·ªùi
              </p>
              <div className="mt-[12px] flex flex-wrap gap-2">
                {previewData?.subCates?.map((item, i) => (
                  <div
                    key={item.subCateId}
                    className="rounded-full w-max bg-[#EAD35B] border-[2px] border-[#8F8137] border-solid xs:px-[10px] px-[2px] py-[0px] text-[12px] text-[#525252]"
                  >
                    {item.name}
                  </div>
                ))}
              </div>
              <div
                className="mt-[30px] unreset"
                dangerouslySetInnerHTML={{ __html: previewData?.descriptionHTML }}
              ></div>

              <div className="mt-[30px]">
                <p className="font-semibold text-[20px]">Nguy√™n li·ªáu:</p>
                <div className="p-5 bg-[#FFDACA] rounded-[10px] mt-[18px] text-[18px]">
                  {previewData?.recipeDetails?.length > 0 &&
                    previewData?.recipeDetails?.map((item, i) => (
                      <div key={item.ingredientId} className="">
                        <p>
                          {i + 1}.{' '}
                          <span
                            className={`${
                              item.ingredientName == 'Gia v·ªã'
                                ? 'text-black'
                                : 'cursor-pointer text-primary font-semibold'
                            }`}
                          >
                            {item.ingredientName}
                          </span>
                          <span>
                            :{' '}
                            {item.ingredientName == 'Gia v·ªã' ? (
                              <>
                                {item.description.map((item, i) => (
                                  <span key={i} className="cursor-pointer text-primary font-semibold">
                                    {(i ? ', ' : '') + item}
                                  </span>
                                ))}
                                <span>. Ho·∫∑c</span>
                                <span className="text-primary cursor-pointer font-semibold">
                                  {' '}
                                  G√≥i gia v·ªã homnayangi
                                </span>
                              </>
                            ) : (
                              item.description
                            )}
                          </span>
                        </p>
                      </div>
                    ))}
                </div>
              </div>

              <div className="mt-[30px]">
                <p className="font-semibold text-[20px]">S∆° ch·∫ø:</p>
                <div
                  className="mt-[10px] unreset"
                  dangerouslySetInnerHTML={{ __html: previewData?.preparationHTML }}
                ></div>
              </div>
              <div className="mt-[30px]">
                <p className="font-semibold text-[20px]">C√°ch ch·∫ø bi·∫øn:</p>
                <div
                  className="mt-[10px] unreset"
                  dangerouslySetInnerHTML={{ __html: previewData?.processingHTML }}
                ></div>
              </div>
              <div className="mt-[30px]">
                <p className="font-semibold text-[20px]">Th√†nh ph·∫©m:</p>
                <div
                  className="mt-[10px] unreset"
                  dangerouslySetInnerHTML={{ __html: previewData?.finishedHTML }}
                ></div>
              </div>
              {/* video */}
              <div className="mt-[30px]">
                {previewData?.videoUrl && (
                  <>
                    <YouTube videoId={getVideoIdFromUrl(previewData?.videoUrl)} opts={opts} />
                  </>
                )}
              </div>
            </div>
          </>
        ) : (
          <div className="py-5 px-5">Ch∆∞a c√≥ n·ªôi dung</div>
        )}
      </div>
      <div className="xxlg:w-[30%] w-full sticky top-[100px] h-fit">
        <div className="bg-white px-5 py-3 rounded-[5px]">
          <p className="font-medium">T√°c gi·∫£: vanhoa1098</p>
          <div className="mt-5 flex gap-3">
            <button className="text-white w-full font-medium px-5 py-2 bg-primary rounded-[5px]">Ph√™ duy·ªát</button>
            <button className="text-white w-full font-medium px-5 py-2 bg-[#cfcfcf] rounded-[5px]">T·ª´ ch·ªëi</button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BlogDetail;
